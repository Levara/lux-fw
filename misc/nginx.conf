# /etc/nginx/nginx.conf
# worker_processes 4; # one per proc "grep processor /proc/cpuinfo | wc -l"
# worker_connections 1024;
# SSL https://certbot.eff.org/
# 11 11 * * * certbot renew --post-hook "service nginx restart"

server {
  if ($scheme != "https") { return 301 https://$HTTP_HOST:$request_uri; }

  listen 80 default_server;
  server_name www.$HTTP_HOST $HTTP_HOST; # wilcard can't host https certs

  root $ROOT/public;

  error_log $ROOT/log/nginx-error.log;
  access_log $ROOT/log/nginx-access.log;

  passenger_enabled on;
  passenger_friendly_error_pages off;

  client_body_timeout 12;
  client_body_in_file_only clean;
  client_body_buffer_size 32K;     # form POST
  client_header_timeout 12;
  client_max_body_size 50M;
  keepalive_timeout 20;
  send_timeout 10;
  sendfile on;

  # comopress all
  gzip             on;
  gzip_vary on;
  gzip_comp_level  2;
  gzip_min_length  5000;
  gzip_proxied     expired no-cache no-store private auth;
  gzip_types       text/html text/plain text/xml text/css application/x-javascript application/javascript application/xml;
  gzip_disable     "MSIE [1-6]\.";

  # if ssl
  # ssl_session_timeout 1h;
  # ssl_session_cache shared:SSL:50m;
  # ssl_stapling on;
  # ssl_stapling_verify on;

  # hackers not wellcome
  location ~* \.(php|sql|asp)$ {
    access_log $ROOT/log/nginx-deny.log;
    return 404;
    deny all;
  }

  # no access log for images
  location ~* \.(gif|png|jpg|jpeg|ico)$ {
    access_log off;
    expires 1d;
  }

  # hard gz assets
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  # certbot ssl
  location ^~ /.well-known {
    allow all;
    default_type "text/plain";
    root $ROOT/public;
  }
}

